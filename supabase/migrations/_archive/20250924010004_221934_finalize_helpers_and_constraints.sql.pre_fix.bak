-- Helpers (idempotent)
CREATE SEQUENCE IF NOT EXISTS public.auto_fish_seq;

CREATE OR REPLACE FUNCTION public.next_auto_fish_code()
RETURNS text
LANGUAGE sql
AS $$
  SELECT 'FSH-' || to_char(now(), 'YYYY') || '-' ||
         to_char(nextval('public.auto_fish_seq'), 'FM000');
$$;

CREATE SEQUENCE IF NOT EXISTS public.tank_label_seq;

-- Keep arg name EXACTLY 'prefix' to avoid replace errors on existing signatures
DO $$
BEGIN
  -- Drop any existing variants to avoid signature/arg-name conflicts
  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = next_tank_code AND pronamespace = public::regnamespace) THEN
    DROP FUNCTION IF EXISTS public.next_tank_code(text);
    DROP FUNCTION IF EXISTS public.next_tank_code(p_prefix text);
  END IF;
END$$;

DO $$
BEGIN
  -- Drop any existing variants to avoid signature/arg-name conflicts
  DROP FUNCTION IF EXISTS public.next_tank_code(text);
  DROP FUNCTION IF EXISTS public.next_tank_code(p_prefix text);
END$$;

CREATE OR REPLACE FUNCTION public.next_tank_code(p_prefix text)
RETURNS text
LANGUAGE plpgsql
AS $func$
DECLARE n bigint;
BEGIN
  n := nextval(public.tank_label_seq);
  RETURN p_prefix || to_char(n, FM000);
END
$func$;
